server:
  port: 8088
spring:
  application:
    name: cloud-nacos-config
  cloud:
    nacos:
      server-addr: 127.0.0.1:8840
      config:
        namespace: a4ac0e09-57cb-45b6-887d-3d8b884a3bca
        group: nacos-config
        file-extension: properties
    gateway:
      discovery:
        locator:
          lower-case-service-id: true # 小驼峰 service id
          enabled: true # 让 gateway 从 nacos 中获取服务信息
      routes:
        - id: provider_payment_consul_routh
          uri: lb://nacos-provider-payment
          predicates:
            - Path=/payment/nacos/**
            - Method=GET
          filters:
            - name:
                RequestRateLimiter # RequestRateLimiterGatewayFilterFactory
              args:
                # 令牌桶每秒填充平均速率
                redis-rate-limiter.replenishRate: 1
                # 令牌桶的上限
                redis-rate-limiter.burstCapacity: 10
                # 使用 SpEL 表达式从 Spring 容器中获取 Bean 对象
                # pathKeyResolver 是根据地址来限流
                key-resolver: "#{@remoteAddrKeyResolver}" # 详情见 RateLimiterConfig
            - name:
                RequestRateLimiter # RequestRateLimiterGatewayFilterFactory
              args:
                # 令牌桶每秒填充平均速率
                redis-rate-limiter.replenishRate: 1
                # 令牌桶的上限
                redis-rate-limiter.burstCapacity: 10
                # 使用 SpEL 表达式从 Spring 容器中获取 Bean 对象
                # pathKeyResolver 是根据地址来限流
                key-resolver: "#{@pathKeyResolver}" # 详情见 RateLimiterConfig
  config:
    import:
      - optional:nacos:${spring.application.name}-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}
      #      - optional:nacos:cloud-nacos-config-test.properties?group=nacos-config
      - optional:nacos:cloud-other-01.yml?group=DEFAULT_GROUP
      - optional:nacos:cloud-other-02.properties&refreshEnabled=false # 不开启动态刷新
      - optional:nacos:cloud-other-03.properties?group=DEFAULT_GROUP
  profiles:
    active: test